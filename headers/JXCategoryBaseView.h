//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

#import "UICollectionViewDataSource-Protocol.h"
#import "UICollectionViewDelegate-Protocol.h"
#import "UICollectionViewDelegateFlowLayout-Protocol.h"

@class JXCategoryCollectionView, NSArray, NSString, UIScrollView;
@protocol JXCategoryViewDelegate;

@interface JXCategoryBaseView : UIView <UICollectionViewDataSource, UICollectionViewDelegate, UICollectionViewDelegateFlowLayout>
{
    _Bool _averageCellWidthEnabled;
    _Bool _cellWidthZoomEnabled;
    _Bool _cellWidthZoomScrollGradientEnabled;
    JXCategoryCollectionView *_collectionView;
    NSArray *_dataSource;
    id <JXCategoryViewDelegate> _delegate;
    UIScrollView *_contentScrollView;
    long long _defaultSelectedIndex;
    long long _selectedIndex;
    double _cellWidth;
    double _cellWidthIncrement;
    double _cellSpacing;
    double _cellWidthZoomScale;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool averageCellWidthEnabled; // @synthesize averageCellWidthEnabled=_averageCellWidthEnabled;
@property(nonatomic) double cellSpacing; // @synthesize cellSpacing=_cellSpacing;
@property(nonatomic) double cellWidth; // @synthesize cellWidth=_cellWidth;
@property(nonatomic) double cellWidthIncrement; // @synthesize cellWidthIncrement=_cellWidthIncrement;
@property(nonatomic) _Bool cellWidthZoomEnabled; // @synthesize cellWidthZoomEnabled=_cellWidthZoomEnabled;
@property(nonatomic) double cellWidthZoomScale; // @synthesize cellWidthZoomScale=_cellWidthZoomScale;
@property(nonatomic) _Bool cellWidthZoomScrollGradientEnabled; // @synthesize cellWidthZoomScrollGradientEnabled=_cellWidthZoomScrollGradientEnabled;
- (void)clickSelectItemWithIndex:(long long)arg1;
@property(retain, nonatomic) JXCategoryCollectionView *collectionView; // @synthesize collectionView=_collectionView;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (struct UIEdgeInsets)collectionView:(id)arg1 layout:(id)arg2 insetForSectionAtIndex:(long long)arg3;
- (double)collectionView:(id)arg1 layout:(id)arg2 minimumInteritemSpacingForSectionAtIndex:(long long)arg3;
- (double)collectionView:(id)arg1 layout:(id)arg2 minimumLineSpacingForSectionAtIndex:(long long)arg3;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (void)contentOffsetOfContentScrollViewDidChanged:(struct CGPoint)arg1;
@property(retain, nonatomic) UIScrollView *contentScrollView; // @synthesize contentScrollView=_contentScrollView;
@property(retain, nonatomic) NSArray *dataSource; // @synthesize dataSource=_dataSource;
- (void)dealloc;
@property(nonatomic) long long defaultSelectedIndex; // @synthesize defaultSelectedIndex=_defaultSelectedIndex;
@property(nonatomic) __weak id <JXCategoryViewDelegate> delegate; // @synthesize delegate=_delegate;
- (struct CGRect)getTargetCellFrame:(long long)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)initializeDatas;
- (void)initializeViews;
- (void)layoutSubviews;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (Class)preferredCellClass;
- (double)preferredCellWidthWithIndex:(long long)arg1;
- (void)refreshCellModel:(id)arg1 index:(long long)arg2;
- (void)refreshDataSource;
- (void)refreshSelectedCellModel:(id)arg1 unselectedCellModel:(id)arg2;
- (void)refreshState;
- (void)reloadCell:(unsigned long long)arg1;
- (void)reloadDatas;
- (void)scrollSelectItemWithIndex:(long long)arg1;
- (_Bool)selectCellWithIndex:(long long)arg1;
- (void)selectItemWithIndex:(unsigned long long)arg1;
@property(nonatomic) long long selectedIndex; // @synthesize selectedIndex=_selectedIndex;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

