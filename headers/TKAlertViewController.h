//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "UIAppearance-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"

@class NSMutableArray, NSMutableDictionary, NSString, UIColor, UIDynamicAnimator, UILabel, UIPanGestureRecognizer, UIScrollView, UITapGestureRecognizer, UIView;
@protocol TKAlertViewControllerDelegate;

@interface TKAlertViewController : UIViewController <UIGestureRecognizerDelegate, UIAppearance>
{
    _Bool _dismissWhenTapWindow;
    _Bool _visible;
    _Bool _isAnimating;
    _Bool _cancelWhenDoneAnimating;
    _Bool _dismissBySwipe;
    _Bool _enabledParallaxEffect;
    UIView *_customView;
    UIColor *_backgroundColor;
    UIView *_backgroundView;
    id <TKAlertViewControllerDelegate> _delegate;
    long long _animationType;
    UITapGestureRecognizer *_tapGestureRecognizer;
    CDUnknownBlockType _dismissWhenTapWindowHandler;
    UIPanGestureRecognizer *_panGestureRecognizer;
    NSMutableArray *_actions;
    NSMutableDictionary *_titleColorDic;
    UIColor *_windowBackgroundColor;
    UIView *_wapperView;
    UIView *_containerView;
    UIScrollView *_scrollView;
    UILabel *_titleView;
    UIView *_buttonContainerView;
    UIDynamicAnimator *_animator;
    struct UIOffset _offset;
    struct UIOffset _landscapeOffset;
    struct UIEdgeInsets _customeViewInset;
}

+ (id)alertWithTitle:(id)arg1 customView:(id)arg2;
+ (id)alertWithTitle:(id)arg1 message:(id)arg2;
+ (id)alertWithTitle:(id)arg1 viewController:(id)arg2;
+ (id)appearance;
+ (id)appearanceForTraitCollection:(id)arg1;
+ (id)appearanceForTraitCollection:(id)arg1 whenContainedIn:(Class)arg2;
+ (id)appearanceWhenContainedIn:(Class)arg1;
+ (double)defaultWidthForCustomView;
+ (void)initialize;
- (void).cxx_destruct;
@property(retain, nonatomic) NSMutableArray *actions; // @synthesize actions=_actions;
- (void)addButtonWithTitle:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)addButtonWithTitle:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)addButtonWithTitle:(id)arg1 type:(long long)arg2 handler:(CDUnknownBlockType)arg3 atIndex:(long long)arg4;
- (void)addCancelButtonWithTitle:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)addCancelButtonWithTitle:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)addDestructiveButtonWithTitle:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)addDestructiveButtonWithTitle:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)addParallaxEffect;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
@property(nonatomic) long long animationType; // @synthesize animationType=_animationType;
@property(retain, nonatomic) UIDynamicAnimator *animator; // @synthesize animator=_animator;
@property(retain, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(retain, nonatomic) UIView *backgroundView; // @synthesize backgroundView=_backgroundView;
- (void)buttonClicked:(id)arg1;
@property(retain, nonatomic) UIView *buttonContainerView; // @synthesize buttonContainerView=_buttonContainerView;
- (id)buttonForIndex:(long long)arg1;
- (id)buttonWithAction:(id)arg1;
@property(nonatomic) _Bool cancelWhenDoneAnimating; // @synthesize cancelWhenDoneAnimating=_cancelWhenDoneAnimating;
@property(retain, nonatomic) UIView *containerView; // @synthesize containerView=_containerView;
- (id)createAnimatorIfNeed;
@property(retain, nonatomic) UIView *customView; // @synthesize customView=_customView;
@property(nonatomic) struct UIEdgeInsets customeViewInset; // @synthesize customeViewInset=_customeViewInset;
- (void)dealloc;
@property(nonatomic) __weak id <TKAlertViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)dismissAnimated:(_Bool)arg1;
@property(nonatomic) _Bool dismissBySwipe; // @synthesize dismissBySwipe=_dismissBySwipe;
@property(nonatomic) _Bool dismissWhenTapWindow; // @synthesize dismissWhenTapWindow=_dismissWhenTapWindow;
@property(copy, nonatomic) CDUnknownBlockType dismissWhenTapWindowHandler; // @synthesize dismissWhenTapWindowHandler=_dismissWhenTapWindowHandler;
- (void)dismissWithClickedButtonIndex:(long long)arg1 animated:(_Bool)arg2;
- (void)dismissWithClickedButtonIndex:(long long)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)dismissWithClickedButtonIndex:(long long)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3 noteDelegate:(_Bool)arg4;
@property(nonatomic) _Bool enabledParallaxEffect; // @synthesize enabledParallaxEffect=_enabledParallaxEffect;
- (void)fixOnCenterWithCompletion:(CDUnknownBlockType)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)hiddenAlertAnimatedWithCompletion:(CDUnknownBlockType)arg1;
- (void)hiddenAlertWithBounce:(CDUnknownBlockType)arg1;
- (void)hiddenAlertWithDropDown:(CDUnknownBlockType)arg1;
- (void)hiddenAlertWithFade:(CDUnknownBlockType)arg1;
- (void)hiddenAlertWithFromBottom:(CDUnknownBlockType)arg1;
- (void)hiddenAlertWithFromTop:(CDUnknownBlockType)arg1;
- (void)hiddenAlertWithPathStyle:(CDUnknownBlockType)arg1;
- (id)init;
- (id)initWithTitle:(id)arg1 customView:(id)arg2;
- (id)initWithTitle:(id)arg1 message:(id)arg2;
- (id)initWithTitle:(id)arg1 message:(id)arg2 textAlignment:(long long)arg3;
- (id)initWithTitle:(id)arg1 viewController:(id)arg2;
@property(nonatomic) _Bool isAnimating; // @synthesize isAnimating=_isAnimating;
@property(nonatomic, getter=isVisible) _Bool visible; // @synthesize visible=_visible;
@property(nonatomic) struct UIOffset landscapeOffset; // @synthesize landscapeOffset=_landscapeOffset;
- (void)loadView;
@property(nonatomic) struct UIOffset offset; // @synthesize offset=_offset;
@property(retain, nonatomic) UIPanGestureRecognizer *panGestureRecognizer; // @synthesize panGestureRecognizer=_panGestureRecognizer;
- (void)panWindow:(id)arg1;
- (void)popupAlertAnimated:(_Bool)arg1 animationType:(long long)arg2 atOffset:(struct UIOffset)arg3;
- (long long)preferredStatusBarStyle;
- (_Bool)prefersStatusBarHidden;
- (void)rePopupAnimated:(_Bool)arg1;
- (void)removeAlertWindowOrShowAnOldAlert;
- (void)removeParallaxEffect;
@property(retain, nonatomic) UIScrollView *scrollView; // @synthesize scrollView=_scrollView;
- (void)setDismissWhenTapWindow:(_Bool)arg1 handler:(CDUnknownBlockType)arg2;
@property(retain, nonatomic) UITapGestureRecognizer *tapGestureRecognizer; // @synthesize tapGestureRecognizer=_tapGestureRecognizer;
- (void)setTitleColor:(id)arg1 forButton:(long long)arg2;
@property(retain, nonatomic) NSMutableDictionary *titleColorDic; // @synthesize titleColorDic=_titleColorDic;
@property(retain, nonatomic) UILabel *titleView; // @synthesize titleView=_titleView;
@property(retain, nonatomic) UIView *wapperView; // @synthesize wapperView=_wapperView;
@property(retain, nonatomic) UIColor *windowBackgroundColor; // @synthesize windowBackgroundColor=_windowBackgroundColor;
- (_Bool)shouldAutorotate;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)show;
- (void)showAlertWithAnimationType:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)showAlertWithBounce:(CDUnknownBlockType)arg1;
- (void)showAlertWithDropDown:(CDUnknownBlockType)arg1;
- (void)showAlertWithFade:(CDUnknownBlockType)arg1;
- (void)showAlertWithFromBottom:(CDUnknownBlockType)arg1;
- (void)showAlertWithFromTop:(CDUnknownBlockType)arg1;
- (void)showAlertWithPathStyle:(CDUnknownBlockType)arg1;
- (void)showOverlayWindowAniamted;
- (void)showWithAnimationType:(long long)arg1;
- (void)showWithAnimationType:(long long)arg1 offset:(struct UIOffset)arg2 landscapeOffset:(struct UIOffset)arg3;
- (unsigned long long)supportedInterfaceOrientations;
- (double)tapPointXPercentage:(double)arg1;
- (void)tapWindow:(id)arg1;
- (void)temporarilyHideAnimated:(_Bool)arg1;
- (id)titleColorForButton:(long long)arg1;
- (void)updateFrameForDisplay;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

